@using BudgetApp.ViewModels.Expenses
@model BudgetApp.ViewModels.Expenses.Output.ExpenseStructureChartViewModel

<div class="row mb-2">
    <div class="col-lg-4">
        <h1 class="display-4">Struktura wydatków</h1>
        <form>
            <div class="form-group">
                <label asp-for="TimeSpan"></label>
                <select asp-for="TimeSpan" asp-items="@Html.GetEnumSelectList<ExpenseTimeSpan>()" class="form-control"></select>
            </div>
            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary"><i class="material-icons">search</i> Szukaj</button>
            </div>
        </form>
    </div>
    <div class="col-lg-8">
        <canvas id="structureChart"></canvas>
    </div>
</div>

@section Scripts
{
    <partial name="_CharsJsPartial"/>
    <script type="text/javascript">
        var colors = [
          "#8bc34a", "#ffeb3b", "#ffc107", "#ff5722", "#e91e63", "#259b24", "#cddc39", "#ff9800", "#e51c23", "#9c27b0",
          "#ffeb3b", "#03a9f4", "#00bcd4", "#9e9e9e", "#607d8b", "#673ab7", "#5677fc", "#009688", "#975548", "#212121"  
        ];
                
        var ctx = document.getElementById('structureChart').getContext('2d');
        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'pie',
        
            // The data for our dataset
            data: {
                labels: [@Html.Raw(string.Join(',', Model.Items.Select(i => "'" + i.CategoryName + "'")))],
                datasets: [{
                    backgroundColor: colors.slice(0, @(Model.Items.Count())),
                    data: [@Html.Raw(string.Join(',', Model.Items.Select(i => i.TotalValue)))]
                }]
            },

            // Configuration options go here
            options: {}
        });
    </script>
}
